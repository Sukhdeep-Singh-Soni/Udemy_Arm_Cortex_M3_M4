/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

//#if !defined(__SOFT_FP__) && defined(__ARM_FP)
//  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
//#endif


int main(void)
{
	__asm volatile ("svc #0x2");
    /* Loop forever */
	for(;;);
}

__attribute__((naked)) void SVC_Handler(void) {
	__asm volatile ("mrs r0, msp");
	__asm volatile ("b SVC_Handler_C");
}

void SVC_Handler_C(uint32_t *pBaseAddrOfStackFrame) {
	printf("[SVC_Handler]\n");
	printf("MSP : %p\n", pBaseAddrOfStackFrame);
	printf("PC  : %p\n", pBaseAddrOfStackFrame[6]);
	uint8_t *preturn_addr = (uint8_t*)pBaseAddrOfStackFrame[6];
	uint16_t svc_opcode = *(instr_next_to_svc - 2);

}


