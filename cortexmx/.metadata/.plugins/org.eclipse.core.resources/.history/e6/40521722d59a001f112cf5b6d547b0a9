/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#define STACK_START	0x20000000U
#define STACK_SIZE	(96 * 1024)
#define STACK_END	(STACK_START + STACK_SIZE)

#define MSP_START	STACK_END
#define MSP_SIZE	512
#define PSP_START	(MSP_START - MSP_SIZE)

__attribute__((naked)) void change_sp_from_msp_to_psp(void) {

	__asm volatile (".equ STACK_END, (0x20000000) + (96 * 1024)");
	__asm volatile (".equ PSP_START, (STACK_END - 512)");
	__asm volatile ("ldr r0, =PSP_START");
	__asm volatile ("msr psp, r0");
	__asm volatile ("mov r0, #0x02");
	__asm volatile ("msr control, r0"); /*set SPSEL = 1*/
}

int main(void)
{
	change_sp_from_msp_to_psp();
    /* Loop forever */
	for(;;);
}
